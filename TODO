# TODOS

## Release 1.0.0
[X] Call from `handler` into `data_processing` with `MatchInfoRequest` data
[ ] GET API data from aoe2net
    [ ] make all requests that are needed for getting all valuable information for matchinfo
    [ ] Add a language parameter to call from the frontend to use translations
    [ ] Should we add a `last_game_id` parameter we can check against at `last_match` to answer
        faster if nothing is new? (client -> sends us `last_game_id` the overlay shows -> we check against `last_match`
        [ ] if `last_match` show finished match we wait 3-5 minutes until frontend fades out
        [ ] Q: how to get away from client-side polling? (frequent requests to `last_match` and WS to client? worth?)
    [ ] Q: can we cache anything?
    [ ] Q: how can we make creating requests easier and less boilerplate?
[ ] GET json/yaml file(s) from github (periodically?) [teams, platforms, players]
    - Sources:
        [ ] https://raw.githubusercontent.com/SiegeEngineers/aoc-reference-data/master/data/players.yaml
        [ ] https://raw.githubusercontent.com/SiegeEngineers/aoc-reference-data/master/data/platforms.json
        [ ] https://raw.githubusercontent.com/SiegeEngineers/aoc-reference-data/master/data/teams.json
    - periodically:
        [ ] at the start of the server
        [ ] once per hour
        [ ] non-persistent, but only overwrite internally if parsing new datastructure was successful
[ ] Merge various data sources into a `MatchInfo` datastructure for giving back to client
    [ ] await json from polska for new matchinfo DS for merging/exposing to our frontend
[ ] Refactoring: create only new clients for each new api-root not for each request to us
    [ ] only if that would make overall performance better (<1.2 sec per request)(?)
    [ ] what (other) architectural changes need to be made to support many clients on our api(?)
    [ ] async stuff done right?
[ ] Implement good error handling
[ ] implement `todo!()`s
[ ] implement useful tests/raise test-coverage to a (valuable) maximum
[ ] create good documentation (!!!)
